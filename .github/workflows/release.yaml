name: Release
on:
  workflow_dispatch:
  create:
    tags:
      - v*

env:
  FETCH_DEPTH: 0 # pull in the tags for the version string

jobs:
  dist:
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            code-target: win32-x64
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            code-target: win32-arm64
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64
          - os: ubuntu-20.04
            target: aarch64-unknown-linux-gnu
            code-target: linux-arm64
          - os: ubuntu-20.04
            target: arm-unknown-linux-gnueabihf
            code-target: linux-armhf
          - os: macos-11
            target: x86_64-apple-darwin
            code-target: darwin-x64
          - os: macos-11
            target: aarch64-apple-darwin
            code-target: darwin-arm64

    name: dist (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}

      # Install Python dependencies (including Ruff's native binary).
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - run: python -m pip install -t ./bundled/libs --implementation py --no-deps --upgrade -r ./requirements.txt

      # Install Node.
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Install Node dependencies.
      - run: npm ci

      # Build the extension.
      - name: Package Extension
        run: npx vsce package -o "./dist/ruff-${{ matrix.code-target }}.vsix" --target ${{ matrix.code-target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: dist-${{ matrix.target }}
          path: ./dist

  publish:
    name: publish
    runs-on: ubuntu-latest
    needs: ["dist"]
    steps:
      - name: Install Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}

      # Download all built artifacts.
      - uses: actions/download-artifact@v1
        with:
          name: dist-aarch64-apple-darwin
          path: dist
      - uses: actions/download-artifact@v1
        with:
          name: dist-x86_64-apple-darwin
          path: dist
      - uses: actions/download-artifact@v1
        with:
          name: dist-x86_64-unknown-linux-gnu
          path: dist
      - uses: actions/download-artifact@v1
        with:
          name: dist-aarch64-unknown-linux-gnu
          path: dist
      - uses: actions/download-artifact@v1
        with:
          name: dist-arm-unknown-linux-gnueabihf
          path: dist
      - uses: actions/download-artifact@v1
        with:
          name: dist-x86_64-pc-windows-msvc
          path: dist
      - uses: actions/download-artifact@v1
        with:
          name: dist-aarch64-pc-windows-msvc
          path: dist
      - run: ls -al ./dist

      # Install Node dependencies.
      - run: npm ci

      # Publish to the Code Marketplace.
      - name: Publish Extension (Code Marketplace)
        if: "startsWith(github.ref, 'refs/tags/')"
        run: npx vsce publish --pat ${{ secrets.MARKETPLACE_TOKEN }} --packagePath ./dist/ruff-*.vsix

      # Publish to OpenVSX.
      - name: Publish Extension (OpenVSX)
        if: "startsWith(github.ref, 'refs/tags/')"
        run: npx ovsx publish --pat ${{ secrets.OPENVSX_TOKEN }} --packagePath ../../dist/ruff-*.vsix
        timeout-minutes: 2
